{"version":3,"sources":["webpack:///src/app/models/domain/new-dto/student.new.dto.ts","webpack:///src/app/views/sign-up/sign-up.component.html","webpack:///src/app/views/sign-up/sign-up.component.ts","webpack:///src/app/views/sign-up/sign-up-routing.module.ts","webpack:///src/app/views/sign-up/sign-up.module.ts"],"names":["this","birthdate","schoolClassId","SignUpComponent","SignUpRoutingModule","SignUpModule","ROUTES","path","component","translateService","storageService","formBuilder","router","modalService","zipCodeService","countryService","stateService","cityService","personService","studentService","courseService","schoolClassService","super","schoolClasses","birthdateMinDate","Date","birthdateMaxDate","bsDateConfig","isAnimated","model","showModal","setFullYear","getFullYear","courses$","findAll","pipe","map","courses","course","DTO","Object","assign","form","addControl","required","get","valueChanges","subscribe","courseId","findAllByCourseAndName","classes","schoolClass","socialSecurityNumberExists","showAlertDanger","emailExists","value","phoneNumbers","push","phoneNumber1","phoneNumber2","valid","setPhoneNumbers","waitModal","showWaitModal","setTimeout","subscription$","insertStudent","hideModal","showAlertSuccess","navigate","socialSecurityNumber","getSocialSecurityNumber","currentForm","onSubmit","onSocialSecurityNumberFocusOut","onEmailFocusOut","forChild"],"mappings":"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","file":"x","sourcesContent":["import { PersonNewDTO } from './person.new.dto';\r\n\r\nexport class StudentNewDTO extends PersonNewDTO {\r\n\r\n    private birthdate: Date;\r\n    private schoolClassId: number;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    public getBirthdate(): Date {\r\n        return this.birthdate;\r\n    }\r\n\r\n    public setBirthdate(birthdate: Date) {\r\n        this.birthdate = birthdate;\r\n    }\r\n\r\n    public getSchoolClassId(): number {\r\n        return this.schoolClassId;\r\n    }\r\n\r\n    public setSchoolClassId(schoolClassId: number) {\r\n        this.schoolClassId = schoolClassId;\r\n    }\r\n}\r\n","\r\n<!-- sign up -->\r\n<article class=\"container\">\r\n    <div class=\"box-wrapper w-100 mx-auto my-md-5 my-3 shadow-lg\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <header>\r\n                    <h2 class=\"text-center\"> \r\n                        {{ 'global.buttons.sign-up' | translate }} \r\n                    </h2>\r\n                </header>\r\n\r\n                <hr>\r\n\r\n                <form class=\"needs-validation\" novalidate [formGroup]=\"form\" (ngSubmit)=\"onSubmit ();\">\r\n\r\n                    <!-- login data -->\r\n                    <div class=\"row my-3\">\r\n                        <div class=\"col-12\">\r\n                            <fieldset class=\"pl-3 py-2\">\r\n                                <header>\r\n                                    <h4> Login </h4>\r\n                                </header>\r\n\r\n                                <div class=\"row\">\r\n\r\n                                    <!-- social security number -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"text\" class=\"form-control\" minlength=\"11\" maxlength=\"11\" \r\n                                                [placeholder]=\"' * ' + ('global.social-security-number' | translate)\"\r\n                                                formControlName=\"socialSecurityNumber\" [ngClass]=\"buildValidationClass ('socialSecurityNumber')\" \r\n                                                [mask]=\"inputMasks.socialSecurityNumber\" [dropSpecialCharacters]=\"false\"\r\n                                                #ssnInput (blur)=\"onSocialSecurityNumberFocusOut (ssnInput.value);\" />\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ ssnInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('socialSecurityNumber')\" [label]=\"'global.social-security-number' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- password -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"password\" class=\"form-control\" minlength=\"10\" maxlength=\"20\" \r\n                                                [placeholder]=\"' * ' + ('global.password' | translate)\" #passwordInput\r\n                                                formControlName=\"password\" [ngClass]=\"buildValidationClass ('password')\" />\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                            {{ passwordInput.minLength }}\r\n                                            {{ 'global.other.to' | translate }} {{ passwordInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('password')\" [label]=\"'global.password' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- confirm password -->\r\n                                    <div class=\"col-md-4 mb-3 form-group\">\r\n                                        <input type=\"password\" class=\"form-control\"\r\n                                                minlength=\"10\" maxlength=\"20\" \r\n                                                [placeholder]=\"' * ' + ('global.confirm-password' | translate)\"\r\n                                                formControlName=\"confirmPassword\" [ngClass]=\"buildValidationClass ('confirmPassword')\" />\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.validations-messages.must-match-password-field' | translate }} \r\n                                        </small>\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('confirmPassword')\" [label]=\"'global.passwords' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- personal data -->\r\n                    <div class=\"row my-3\">\r\n                        <div class=\"col-12\">\r\n                            <fieldset class=\"pl-3 py-2\">\r\n                                <header>\r\n                                    <h4> {{ 'global.personal.personal' | translate }} </h4>\r\n                                </header>\r\n                                \r\n                                <div class=\"row my-3\">\r\n\r\n                                    <!-- name -->\r\n                                    <div class=\"col-md-5 my-md-0 my-2\">\r\n                                        <input type=\"text\" id=\"nameInput\" class=\"form-control\" minlength=\"5\" maxlength=\"120\" \r\n                                                [placeholder]=\"' * ' + ('global.personal.name' | translate)\" #nameInput\r\n                                                formControlName=\"name\" [ngClass]=\"buildValidationClass ('name')\" />\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                            {{ nameInput.minLength }}\r\n                                            {{ 'global.other.to' | translate }} {{ nameInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('name')\" [label]=\"'global.personal.name' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- email -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"email\" id=\"emailInput\" class=\"form-control\" minlength=\"5\" maxlength=\"30\" \r\n                                                [placeholder]=\"' * ' + ('global.personal.email' | translate)\" #emailInput\r\n                                                formControlName=\"email\" [ngClass]=\"buildValidationClass ('email')\"\r\n                                                (blur)=\"onEmailFocusOut (emailInput.value)\" />\r\n\r\n                                            <small class=\"text-muted\">\r\n                                                {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                                {{ emailInput.minLength }}\r\n                                                {{ 'global.other.to' | translate }} {{ emailInput.maxLength }}\r\n                                                {{ 'global.validations-messages.characters' | translate }}\r\n                                            </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('email')\" [label]=\"'global.personal.email' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- birthdate -->\r\n                                    <div class=\"col-md-3 my-md-0 my-2\">\r\n                                        <input type=\"text\" id=\"birthdateInput\" class=\"form-control\" minlength=\"10\" maxlength=\"10\" \r\n                                                [placeholder]=\"' * ' + ('global.personal.birthdate' | translate)\"\r\n                                                formControlName=\"birthdate\" [ngClass]=\"buildValidationClass ('birthdate')\"\r\n                                                bsDatepicker [bsConfig]=\"bsDateConfig\" \r\n                                                [minDate]=\"birthdateMinDate\" [maxDate]=\"birthdateMaxDate\">\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('birthdate')\" [label]=\"'global.personal.birthdate' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row my-3\">\r\n\r\n                                    <!-- course -->\r\n                                    <div class=\"col-md-6 my-md-0 my-2\">\r\n                                        <select class=\"form-control\" formControlName=\"courseId\" [ngClass]=\"buildValidationClass ('courseId')\">\r\n                                            <option [value]=\"null\">\r\n                                                * {{ 'sign-up.your-course' | translate }} \r\n                                            </option>\r\n                                            <option *ngFor=\"let course of courses$ | async\" [value]=\"course.getId ()\">\r\n                                                {{ course.getName () }} - {{ course.getPeriod () }} -\r\n                                                {{ course.getType () }}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                        <app-error-message [control]=\"form.get ('courseId')\" [label]=\"'sign-up.your-course' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- school class -->\r\n                                    <div class=\"col-md-6 my-md-0 my-2\">\r\n                                        <select class=\"form-control\" formControlName=\"schoolClassId\" [ngClass]=\"buildValidationClass ('schoolClassId')\">\r\n                                            <option [value]=\"null\">\r\n                                                * {{ 'sign-up.your-class' | translate }} \r\n                                            </option>\r\n                                            <option *ngFor=\"let schoolClass of schoolClasses\" [value]=\"schoolClass.getId ()\">\r\n                                                {{ schoolClass.getName () }} - {{ schoolClass.getStart () }} /\r\n                                                {{ schoolClass.getEnd () }}\r\n                                            </option>\r\n                                        </select>\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('schoolClassId')\" [label]=\"'sign-up.your-class' | translate\"></app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row my-3\" formGroupName=\"phoneNumbers\">\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                                [placeholder]=\"' * ' + ('global.personal.phone-number' | translate)\"\r\n                                                formControlName=\"phoneNumber0\" [ngClass]=\"buildValidationClass ('phoneNumbers.phoneNumber0')\" \r\n                                                [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.this' | translate }} \r\n                                            {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                            {{ 'global.other.is-required' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber0')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                                [placeholder]=\"'global.personal.phone-number' | translate\"\r\n                                                formControlName=\"phoneNumber1\" \r\n                                                [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.this' | translate }} \r\n                                            {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                            {{ 'global.other.is-optional' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber1')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                                [placeholder]=\"'global.personal.phone-number' | translate\"\r\n                                                formControlName=\"phoneNumber2\" \r\n                                                [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.this' | translate }} \r\n                                            {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                            {{ 'global.other.is-optional' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber2')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- address data -->\r\n                    <div class=\"row my-3\">\r\n                        <div class=\"col-12\">\r\n                            <fieldset class=\"pl-3 py-2\">\r\n                                <header>\r\n                                    <h4> {{ 'global.address.address' | translate }} </h4>\r\n                                </header>\r\n\r\n                                <div class=\"row my-3\">\r\n\r\n                                    <!-- country -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <select class=\"form-control\" formControlName=\"countryId\" [ngClass]=\"buildValidationClass ('countryId')\">\r\n                                            <option [value]=\"null\">\r\n                                                * {{ 'global.address.country' | translate }}\r\n                                            </option>\r\n                                            <option *ngFor=\"let country of countries$ | async;\" [value]=\"country.getId ()\">\r\n                                                {{ country.getAbbreviation ()}} - {{ country.getName () }} \r\n                                            </option>\r\n                                        </select>\r\n\r\n                                        <app-error-message [control]=\"form.get ('countryId')\" [label]=\"'global.address.country' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- state -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <select class=\"form-control\" formControlName=\"stateId\" [ngClass]=\"buildValidationClass ('stateId')\">\r\n                                            <option [value]=\"null\">\r\n                                                * {{ 'global.address.state' | translate }}\r\n                                            </option>\r\n                                            <option *ngFor=\"let state of states;\" [value]=\"state.getId ()\">\r\n                                                {{ state.getAbbreviation () }} - {{ state.getName () }} \r\n                                            </option>\r\n                                        </select>\r\n\r\n                                        <app-error-message [control]=\"form.get ('stateId')\" [label]=\"'global.address.state' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- city -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <select class=\"form-control\" formControlName=\"cityId\" [ngClass]=\"buildValidationClass ('cityId')\">\r\n                                            <option [value]=\"null\">\r\n                                                * {{ 'global.address.city' | translate }}\r\n                                            </option>\r\n                                            <option *ngFor=\"let city of cities;\" [value]=\"city.getId ()\">\r\n                                                {{ city.getName () }} \r\n                                            </option>\r\n                                        </select>\r\n\r\n                                        <app-error-message [control]=\"form.get ('cityId')\" [label]=\"'global.address.city' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row my-3\">\r\n\r\n                                    <!-- zip code -->\r\n                                    <div class=\"col-md-2 my-md-0 my-2\">\r\n                                        <input type=\"text\" class=\"form-control\" minlength=\"5\" maxlength=\"10\" \r\n                                        [placeholder]=\"' * ' + ('global.address.zip-code' | translate)\"\r\n                                        formControlName=\"zipCode\" [ngClass]=\"buildValidationClass ('zipCode')\"\r\n                                        [mask]=\"inputMasks.zipCode\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.zip-code-load' | translate }}\r\n                                        </small>\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('zipCode')\" [label]=\"'global.address.zip-code' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- street -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"text\" class=\"form-control\" minlength=\"5\" maxlength=\"120\" \r\n                                                [placeholder]=\"' * ' + ('global.address.street' | translate)\" #streetInput\r\n                                                formControlName=\"street\" [ngClass]=\"buildValidationClass ('street')\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                            {{ streetInput.minLength }}\r\n                                            {{ 'global.other.to' | translate }} {{ streetInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                        <!-- validation -->\r\n                                        <app-error-message [control]=\"form.get ('street')\" [label]=\"'global.address.street' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n\r\n                                    <!-- complement -->\r\n                                    <div class=\"col-md-4 my-md-0 my-2\">\r\n                                        <input type=\"text\" class=\"form-control\" maxlength=\"120\" #complementInput\r\n                                                [placeholder]=\"'global.address.complement' | translate\" formControlName=\"complement\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.optional' | translate }},\r\n                                            {{ 'global.other.but-allows-up-to' | translate }}\r\n                                            {{ complementInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n                                    </div>\r\n\r\n                                    <!-- number -->\r\n                                    <div class=\"col-md-2 my-md-0 my-2\">\r\n                                        <input type=\"text\" class=\"form-control\" minlength=\"1\" maxlength=\"5\" \r\n                                                [placeholder]=\"' * ' + ('global.address.number' | translate)\" #numberInput\r\n                                                formControlName=\"number\" [ngClass]=\"buildValidationClass ('number')\"\r\n                                                [mask]=\"inputMasks.number\">\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                            {{ numberInput.minLength }}\r\n                                            {{ 'global.other.to' | translate }} {{ numberInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                        <app-error-message [control]=\"form.get ('number')\" [label]=\"'global.address.number' | translate\">\r\n                                        </app-error-message>\r\n                                    </div>\r\n                                </div>\r\n                            </fieldset>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <hr>\r\n\r\n                    <div class=\"row\">\r\n                        <div class=\"col-12\">\r\n                            <label class=\"required-label\"> \r\n                                (*) {{ 'global.required-fields' | translate }} \r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"d-none\" #buttonSubmit> Submit </button>\r\n                </form>\r\n            </div>\r\n\r\n            <!-- buttons -->\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-6\">\r\n                        <a [routerLink]=\"['/login']\">\r\n                            {{ 'global.buttons.cancel' | translate }} \r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col-6\">\r\n                        <button type=\"button\" class=\"btn btn-success float-right\" (click)=\"buttonSubmit.click ()\"> \r\n                            {{ 'global.buttons.submit' | translate }} \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</article>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormControl } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { StudentService } from 'src/app/services/domain/student.service';\r\nimport { CountryService } from 'src/app/services/domain/country.service';\r\nimport { StateService } from 'src/app/services/domain/state.service';\r\nimport { CityService } from 'src/app/services/domain/city.service';\r\nimport { CourseService } from 'src/app/services/domain/course.service';\r\nimport { SchoolClassService } from 'src/app/services/domain/school-class.service';\r\nimport { ZipCodeService } from 'src/app/services/zip-code.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { PersonService } from 'src/app/services/domain/person.service';\r\n\r\nimport { StudentNewDTO } from 'src/app/models/domain/new-dto/student.new.dto';\r\nimport { CourseDTO } from 'src/app/models/domain/dto/course.dto';\r\nimport { SchoolClassDTO } from 'src/app/models/domain/dto/school-class.dto';\r\n\r\nimport { PersonsFormComponent } from '../persons/persons-form.component';\r\n\r\n@Component({\r\n  selector: 'app-students-form',\r\n  templateUrl: './sign-up.component.html',\r\n  styles: ['.box-wrapper { width: 60rem; }']\r\n})\r\nexport class SignUpComponent extends PersonsFormComponent<StudentNewDTO> implements OnInit, OnDestroy {\r\n\r\n  // FIELDS\r\n\r\n  public courses$: Observable<CourseDTO[]>;\r\n  public schoolClasses: SchoolClassDTO[] = [];\r\n\r\n  // Date related\r\n\r\n  public birthdateMinDate = new Date ();\r\n  public birthdateMaxDate = new Date ();\r\n  public bsDateConfig = { isAnimated: true };\r\n\r\n  // CONSTRUCTOR\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    protected formBuilder: FormBuilder,\r\n    protected router: Router,\r\n    protected modalService: ModalService,\r\n    protected zipCodeService: ZipCodeService,\r\n    protected countryService: CountryService,\r\n    protected stateService: StateService,\r\n    protected cityService: CityService,\r\n    protected personService: PersonService,\r\n    private studentService: StudentService,\r\n    private courseService: CourseService,\r\n    private schoolClassService: SchoolClassService,\r\n\r\n  ) {\r\n    super(translateService, storageService, formBuilder, router,\r\n          modalService, zipCodeService, countryService, stateService,\r\n          cityService, personService);\r\n\r\n    // default values\r\n    this.model = new StudentNewDTO();\r\n    this.showModal = true;\r\n    this.birthdateMinDate.setFullYear (this.birthdateMinDate.getFullYear () - 60);\r\n    this.birthdateMaxDate.setFullYear (this.birthdateMaxDate.getFullYear () - 15, 11, 30);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n    super.ngOnInit ();\r\n\r\n    this.courses$ = this.courseService.findAll().pipe(\r\n      map(courses => {\r\n        return courses.map(course => {\r\n          const DTO = new CourseDTO();\r\n          Object.assign(DTO, course);\r\n          return DTO;\r\n        });\r\n      })\r\n    );\r\n\r\n    // other controls\r\n    this.form.addControl ('birthdate', new FormControl (null, [Validators.required]));\r\n    this.form.addControl ('courseId', new FormControl (null, [Validators.required]));\r\n    this.form.addControl ('schoolClassId', new FormControl (null, [Validators.required]));\r\n\r\n    this.form.get('courseId').valueChanges.subscribe(\r\n      courseId => {\r\n        if (courseId !== null && courseId !== '') {\r\n          this.schoolClassService.findAllByCourseAndName(courseId, '').subscribe(\r\n            (classes: SchoolClassDTO[]) => {\r\n              this.schoolClasses = classes.map(schoolClass => {\r\n                const DTO = new SchoolClassDTO();\r\n                Object.assign(DTO, schoolClass);\r\n                return DTO;\r\n              });\r\n            },\r\n            () => this.schoolClasses = []\r\n          );\r\n        }\r\n        else {\r\n          this.schoolClasses = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy ();\r\n  }\r\n\r\n  protected submit(): void {\r\n\r\n    if (this.socialSecurityNumberExists) {\r\n      this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.ssn-found');\r\n      return;\r\n    }\r\n\r\n    if (this.emailExists) {\r\n      this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.email-found');\r\n      return;\r\n    }\r\n\r\n    this.model = Object.assign (this.model, this.form.value) as StudentNewDTO;\r\n    const phoneNumbers: string[] = [];\r\n    phoneNumbers.push (this.form.get ('phoneNumbers.phoneNumber0').value);\r\n    const phoneNumber1 = this.form.get ('phoneNumbers.phoneNumber1');\r\n    const phoneNumber2 = this.form.get ('phoneNumbers.phoneNumber2');\r\n\r\n    if (phoneNumber1.value !== null && phoneNumber1.valid) {\r\n      phoneNumbers.push (phoneNumber1.value);\r\n    }\r\n\r\n    if (phoneNumber2.value !== null && phoneNumber2.valid) {\r\n      phoneNumbers.push (phoneNumber2.value);\r\n    }\r\n\r\n    this.model.setPhoneNumbers(phoneNumbers);\r\n\r\n    const waitModal = this.modalService.showWaitModal();\r\n\r\n    setTimeout(() => {\r\n      this.subscription$ = this.studentService.insertStudent (this.model).subscribe (\r\n        () => {\r\n          this.modalService.hideModal (waitModal);\r\n          this.modalService.showAlertSuccess ('modal.titles.success', 'modal.messages.post-success');\r\n          this.router.navigate (['/login', { socialSecurityNumber: this.model.getSocialSecurityNumber () }]);\r\n        },\r\n        () => {\r\n          this.modalService.hideModal (waitModal);\r\n          this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.post-error');\r\n        }\r\n      );\r\n    }, 500);\r\n  }\r\n\r\n  protected showValidationModal(currentForm: FormGroup): void {\r\n    super.showValidationModal (currentForm);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { SignUpComponent } from './sign-up.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: SignUpComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SignUpRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { SignUpRoutingModule } from './sign-up-routing.module';\r\nimport { BootstrapModule } from 'src/app/shared/bootstrap/bootstrap.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nimport { SignUpComponent } from './sign-up.component';\r\n\r\n@NgModule({\r\n  declarations: [SignUpComponent],\r\n  imports: [\r\n  CommonModule,\r\n    ReactiveFormsModule,\r\n    SignUpRoutingModule,\r\n    BootstrapModule,\r\n    SharedModule\r\n  ]\r\n})\r\nexport class SignUpModule { }\r\n"]}