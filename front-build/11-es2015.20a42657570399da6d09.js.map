{"version":3,"sources":["webpack:///src/app/models/domain/dto/credentials.dto.ts","webpack:///src/app/views/login/login-routing.module.ts","webpack:///src/app/views/login/login.component.ts","webpack:///src/app/views/login/login.component.html","webpack:///src/app/views/login/login.module.ts"],"names":["CredentialsDTO","this","socialSecurityNumber","ssn","password","ROUTES","path","component","LoginComponent","translateService","storageService","formBuilder","router","modalService","authenticationService","personService","route","super","model","form","group","required","subscription$","params","subscribe","patchValue","unsubscribe","Object","assign","value","waitModal","showWaitModal","setTimeout","authenticate","response","bearer","headers","get","successfulLogin","localUser","getLocalUser","findLoggedUserInfo","error","hideModal","message","standardError","JSON","parse","showAlertDanger","findPersonBySSN","environment","API","getSocialSecurityNumber","res","person","setId","getId","setType","getType","setProfiles","getProfiles","setLocalUser","navigate","onSubmit","LoginRoutingModule","forChild","LoginModule"],"mappings":"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","file":"x","sourcesContent":["\r\nexport class CredentialsDTO {\r\n\r\n    private socialSecurityNumber: string;\r\n    private password: string;\r\n\r\n    constructor() {}\r\n\r\n    public getSocialSecurityNumber(): string {\r\n        return this.socialSecurityNumber;\r\n    }\r\n\r\n    public setSocialSecurityNumber(ssn: string) {\r\n        this.socialSecurityNumber = ssn;\r\n    }\r\n\r\n    public getPassword(): string {\r\n        return this.password;\r\n    }\r\n\r\n    public setPassword(password: string) {\r\n        this.password = password;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: LoginComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { BsModalRef } from 'ngx-bootstrap/modal';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { PersonService } from 'src/app/services/domain/person.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\nimport { CredentialsDTO } from 'src/app/models/domain/dto/credentials.dto';\r\nimport { LocalUser } from 'src/app/models/local-user';\r\nimport { PersonDTO } from 'src/app/models/domain/dto/person.dto';\r\n\r\nimport { StandardError } from 'src/app/models/standard-error';\r\n\r\nimport { BaseFormComponent } from 'src/app/shared/base-form/base-form.component';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent extends BaseFormComponent<CredentialsDTO> implements OnInit, OnDestroy {\r\n\r\n  // CONSTRUCTOR\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    protected formBuilder: FormBuilder,\r\n    protected router: Router,\r\n    protected modalService: ModalService,\r\n    private authenticationService: AuthenticationService,\r\n    private personService: PersonService,\r\n    private route: ActivatedRoute,\r\n  ) {\r\n    super(translateService, storageService, formBuilder, router);\r\n    this.model = new CredentialsDTO ();\r\n  }\r\n\r\n  // LIFECYCLE HOOKS\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.form = this.formBuilder.group({\r\n      socialSecurityNumber: [null, [Validators.required]],\r\n      password: [null, [Validators.required]]\r\n    });\r\n\r\n    this.subscription$ = this.route.params.subscribe (\r\n      (params: any) => {\r\n        const key = 'socialSecurityNumber';\r\n        const socialSecurityNumber = params[key];\r\n\r\n        if (socialSecurityNumber != null) {\r\n          this.form.patchValue ({ socialSecurityNumber });\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription$.unsubscribe();\r\n  }\r\n\r\n  // HELPER FUNCTIONS\r\n\r\n  protected submit(): void {\r\n\r\n    this.model = Object.assign(this.model, this.form.value);\r\n    const waitModal = this.modalService.showWaitModal();\r\n\r\n    setTimeout(() => {\r\n      this.subscription$ = this.authenticationService.authenticate(this.model).subscribe(\r\n        (response) => {\r\n          const bearer = response.headers.get('Authorization');\r\n          this.authenticationService.successfulLogin(bearer);\r\n          const localUser = new LocalUser();\r\n          Object.assign(localUser, this.storageService.getLocalUser());\r\n          this.findLoggedUserInfo(localUser, waitModal);\r\n        },\r\n        (error) => {\r\n\r\n          this.modalService.hideModal(waitModal);\r\n\r\n          if (error.error.message) {\r\n            const standardError = JSON.parse(error.error) as StandardError;\r\n            this.modalService.showAlertDanger(standardError.error, standardError.message);\r\n            return;\r\n          }\r\n\r\n          this.modalService.showAlertDanger('modal.titles.attention', 'modal.messages.wrong-data');\r\n        }\r\n      );\r\n    }, 500);\r\n  }\r\n\r\n  protected showValidationModal(): void {}\r\n\r\n  private findLoggedUserInfo(localUser: LocalUser, waitModal: BsModalRef): void {\r\n    const url = `${environment.API}/v1/public/persons/ssn`;\r\n    this.subscription$ = this.personService.findPersonBySSN(url, localUser.getSocialSecurityNumber())\r\n      .subscribe((res) => {\r\n        this.modalService.hideModal(waitModal);\r\n\r\n        // Updating data\r\n        const person = new PersonDTO();\r\n        Object.assign(person, res);\r\n\r\n        localUser.setId(person.getId());\r\n        localUser.setType(person.getType());\r\n        localUser.setProfiles(person.getProfiles());\r\n\r\n        this.storageService.setLocalUser(localUser);\r\n        this.router.navigate(['home']);\r\n      },\r\n      () => {\r\n        this.modalService.hideModal(waitModal);\r\n        this.modalService.showAlertDanger('modal.titles.error', 'modal.messages.ssn-not-found');\r\n      }\r\n    );\r\n  }\r\n}\r\n","\r\n<!-- login -->\r\n<article class=\"container\">\r\n    <div class=\"box-wrapper w-75 mx-auto my-md-5 my-3 shadow-lg\">\r\n        <div class=\"card\">\r\n            <div class=\"card-body\">\r\n                <header>\r\n                    <h1 class=\"text-center\"> S E M S Y S </h1>\r\n                </header>\r\n\r\n                <hr>\r\n\r\n                <form class=\"needs-validation\" novalidate [formGroup]=\"form\" (ngSubmit)=\"onSubmit ();\">\r\n                    <div class=\"row\">\r\n\r\n                        <!-- social security number -->\r\n                        <div class=\"col-md-5\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"text\" id=\"ssnInput\" class=\"form-control\" minlength=\"11\" maxlength=\"11\"\r\n                                       [placeholder]=\"'global.social-security-number' | translate\" \r\n                                       formControlName=\"socialSecurityNumber\" [ngClass]=\"buildValidationClass ('socialSecurityNumber')\"\r\n                                       [mask]=\"inputMasks.socialSecurityNumber\" [dropSpecialCharacters]=\"false\">\r\n                                <app-error-message [control]=\"form.get ('socialSecurityNumber')\" [label]=\"'Social Security Number'\">\r\n                                </app-error-message>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <!-- password -->\r\n                        <div class=\"col-md-5\">\r\n                            <div class=\"form-group\">\r\n                                <input type=\"password\" id=\"passwordInput\" class=\"form-control\" maxlength=\"20\"\r\n                                       [placeholder]=\"'global.password' | translate\"\r\n                                       formControlName=\"password\" [ngClass]=\"buildValidationClass ('password')\">\r\n                                <app-error-message [control]=\"form.get ('password')\" [label]=\"'Password'\">\r\n                                </app-error-message>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class=\"col-md-2\">\r\n                            <button type=\"button\" class=\"btn btn-success btn-block\" (click)=\"btnSubmit.click ();\" [disabled]=\"!this.form.valid\"> \r\n                                {{ 'global.buttons.login' | translate }} \r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button type=\"submit\" class=\"d-none\" #btnSubmit> Login </button>\r\n                </form>\r\n            </div>\r\n            <div class=\"card-footer\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-md-6 col-4\">\r\n                        <a [routerLink]=\"['/sign-up']\">\r\n                            {{ 'global.buttons.sign-up' | translate }} \r\n                        </a>\r\n                    </div>\r\n                    <div class=\"col-md-6 col-8\">\r\n                        <a class=\"float-right\" [routerLink]=\"['/forgot-password']\"> \r\n                            {{ 'global.forgot-password' | translate }} \r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</article>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    LoginRoutingModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"]}