{"version":3,"sources":["webpack:///src/app/views/employees/employees-list/employees-list.component.html","webpack:///src/app/views/employees/employees-list/employees-list.component.ts","webpack:///src/app/models/domain/new-dto/employee.new.dto.ts","webpack:///src/app/views/employees/employees-form/employees-form.component.html","webpack:///src/app/views/employees/employees-routing.module.ts","webpack:///src/app/views/employees/employees-form/employees-form.component.ts","webpack:///src/app/views/employees/employees.module.ts"],"names":["EmployeesListComponent","translateService","storageService","employeeService","imageUtilService","modalService","router","super","this","globalHeader","params","set","records$","loadData","hasError","recordsCount","value","queryField","findAllByName","pipe","map","employees","length","employee","dto","Object","assign","imageUrl","environment","BUCKET_BASE_URL","buildFileName","getName","setImageUrl","imageElement","document","createElement","src","addEventListener","DEFAULT_AVATAR_IMG","catchError","error$","next","handleError","modalTexts","error","title","loading","body","navigateByUrl","onSearch","redirectToNewEmployee","ROUTES","path","component","EmployeesFormComponent","formBuilder","zipCodeService","countryService","stateService","cityService","personService","model","showModal","ngOnInit","ngOnDestroy","socialSecurityNumberExists","showAlertDanger","emailExists","form","phoneNumbers","push","get","phoneNumber1","phoneNumber2","valid","setPhoneNumbers","waitModal","showWaitModal","setTimeout","subscription$","insertEmployee","subscribe","hideModal","showAlertSuccess","resetForm","currentForm","showValidationModal","onSubmit","onSocialSecurityNumberFocusOut","onEmailFocusOut","EmployeesRoutingModule","forChild","EmployeesModule"],"mappings":"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","file":"x","sourcesContent":["\r\n<!-- employees -->\r\n<article class=\"card-box shadow-lg mx-auto my-md-5 my-3\">\r\n    <header>\r\n        <h1 class=\"mb-3 text-center\"> {{ globalHeader | translate }} </h1>\r\n    </header>\r\n\r\n    <hr>\r\n\r\n    <!-- search | new employee -->\r\n    <div class=\"row\">\r\n        <div class=\"col-md-9\">\r\n            <div class=\"input-group mb-3\">\r\n                <input type=\"text\" class=\"form-control\" [formControl]=\"queryField\" \r\n                       [placeholder]=\"'global.messages.search-for-name' | translate\">\r\n                <div class=\"input-group-append\">\r\n                    <button type=\"search\" class=\"btn btn-success\" (click)=\"onSearch ();\"> \r\n                        {{ 'global.buttons.search' | translate }} \r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <button type=\"button\" class=\"btn btn-primary w-100\" (click)=\"redirectToNewEmployee ();\"> \r\n                {{ 'global.buttons.new-employee' | translate }} \r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"row\" *ngIf=\"records$ | async as employees; else spanLoading;\">\r\n        <div class=\"col-12\">\r\n            <div class=\"card-container\" *ngIf=\"!hasError && recordsCount !== 0; else emptyTemplate\">\r\n                <div class=\"row row-cols-1 row-cols-md-4\">\r\n                    <div class=\"col mb-4\" *ngFor=\"let employee of employees;\">\r\n                        <div class=\"card card-list-item\">\r\n                            <div class=\"card-header card-name\" [title]=\"employee.getName ()\"> \r\n                                {{ employee.getName () }} \r\n                            </div>\r\n                            <img class=\"img-fluid border-bottom\" [src]=\"employee?.getImageUrl() || 'assets/images/avatar-blank.png'\" alt=\"person\">\r\n                            <div class=\"card-body\">\r\n                                <p class=\"card-text\"> {{ employee.getEmail () }} </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ng-template #emptyTemplate>\r\n                <div class=\"bg-light p-3 text-center\">\r\n                    {{ 'global.messages.nothing-found' | translate }}\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n        \r\n    </div>\r\n\r\n    <ng-template #spanLoading>\r\n        <div class=\"bg-light p-3 text-center\">\r\n            <span *ngIf=\"!hasError; else spanError;\"> \r\n                {{ 'global.messages.loading' | translate }} \r\n                {{ 'global.menu-links.employees' | translate }} ... \r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #spanError>\r\n        <span> {{ 'global.messages.system-error' | translate }} </span>\r\n        <button type=\"button\" class=\"btn btn-info mx-1\" (click)=\"onSearch ()\"> \r\n            {{ 'global.buttons.reload' | translate }} \r\n        </button>\r\n    </ng-template>\r\n\r\n</article>","import { Component, OnInit } from '@angular/core';\r\nimport { HttpParams } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { TranslateService } from '@ngx-translate/core';\r\n\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { EmployeeService } from 'src/app/services/domain/employee.service';\r\nimport { ImageUtilService } from 'src/app/services/image-util.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\n\r\nimport { EmployeeDTO } from 'src/app/models/domain/dto/employee.dto';\r\n\r\nimport { BaseCardListComponent } from 'src/app/shared/list-table/base-card-list/base-card-list.component';\r\n\r\n@Component({\r\n  selector: 'app-employees-list',\r\n  templateUrl: './employees-list.component.html'\r\n})\r\nexport class EmployeesListComponent extends BaseCardListComponent<EmployeeDTO> implements OnInit {\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    private employeeService: EmployeeService,\r\n    private imageUtilService: ImageUtilService,\r\n    protected modalService: ModalService,\r\n    private router: Router\r\n  ) {\r\n    super(translateService, storageService, modalService);\r\n    this.globalHeader = 'global.menu-links.employees';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.params = this.params.set('name', '');\r\n    this.records$ = this.loadData(this.params);\r\n  }\r\n\r\n  public onDelete(): void { }\r\n  public onUpdate(): void { }\r\n  public onSearch(): void {\r\n    this.hasError = false;\r\n    this.recordsCount = 0;\r\n\r\n    let value = this.queryField.value;\r\n    value = (value ? value : '');\r\n\r\n    this.params = this.params.set('name', value);\r\n    this.records$ = this.loadData(this.params);\r\n  }\r\n\r\n  protected loadData(params?: HttpParams): Observable<EmployeeDTO[]> {\r\n    return this.employeeService.findAllByName(params).pipe(\r\n      map(employees => {\r\n        this.recordsCount = employees.length;\r\n        return employees.map((employee) => {\r\n          this.hasError = false;\r\n\r\n          const dto = new EmployeeDTO();\r\n          Object.assign(dto, employee);\r\n\r\n          // bucket url\r\n          let imageUrl = environment.BUCKET_BASE_URL;\r\n          imageUrl += `/${this.imageUtilService.buildFileName(dto.getName())}.jpg`;\r\n          dto.setImageUrl(imageUrl);\r\n\r\n          const imageElement = document.createElement('img');\r\n          imageElement.src = imageUrl;\r\n          imageElement.addEventListener('error', () => dto.setImageUrl(environment.DEFAULT_AVATAR_IMG));\r\n\r\n          return dto;\r\n        });\r\n      }),\r\n\r\n      catchError (() => {\r\n        this.hasError = true;\r\n        this.recordsCount = 0;\r\n        this.error$.next (true);\r\n        this.handleError (this.modalTexts.error.title, this.modalTexts.loading.body);\r\n        return EMPTY;\r\n      })\r\n\r\n    ) as Observable<EmployeeDTO[]>;\r\n  }\r\n\r\n  public redirectToNewEmployee(): void {\r\n    this.router.navigateByUrl ('employees/new');\r\n  }\r\n}\r\n","import { PersonNewDTO } from './person.new.dto';\r\n\r\nexport class EmployeeNewDTO extends PersonNewDTO {\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}\r\n","\r\n<!-- new employee -->\r\n<div class=\"box-wrapper w-100 mx-auto my-md-5 my-3 shadow-lg\">\r\n    <div class=\"card\">\r\n        <div class=\"card-body\">\r\n            <header>\r\n                <h1 class=\"text-center\"> {{ 'global.buttons.new-employee' | translate }} </h1>\r\n            </header>\r\n\r\n            <hr>\r\n\r\n            <form class=\"needs-validation\" novalidate [formGroup]=\"form\" (ngSubmit)=\"onSubmit ()\">\r\n                <div class=\"row my-3\">\r\n                    <div class=\"col-12\">\r\n                        <fieldset class=\"pl-3 py-2\">\r\n                            <header>\r\n                                <h4> Login </h4>\r\n                            </header>\r\n\r\n                            <div class=\"row\">\r\n\r\n                                <!-- social security number -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"text\" class=\"form-control\" minlength=\"11\" maxlength=\"11\" \r\n                                           [placeholder]=\"' * ' + ('global.social-security-number' | translate)\"\r\n                                           formControlName=\"socialSecurityNumber\" [ngClass]=\"buildValidationClass ('socialSecurityNumber')\" \r\n                                           [mask]=\"inputMasks.socialSecurityNumber\" [dropSpecialCharacters]=\"false\"\r\n                                           #ssnInput (blur)=\"onSocialSecurityNumberFocusOut (ssnInput.value);\" />\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.needed' | translate }} {{ ssnInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('socialSecurityNumber')\" [label]=\"'global.social-security-number' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- password -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"password\" class=\"form-control\" minlength=\"10\" maxlength=\"20\" \r\n                                           [placeholder]=\"' * ' + ('global.password' | translate)\" #passwordInput\r\n                                           formControlName=\"password\" [ngClass]=\"buildValidationClass ('password')\" />\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                        {{ passwordInput.minLength }}\r\n                                        {{ 'global.other.to' | translate }} {{ passwordInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n\r\n                                    <!-- validation -->\r\n                                    <app-error-message [control]=\"form.get ('password')\" [label]=\"'global.password' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- confirm password -->\r\n                                <div class=\"col-md-4 mb-3 form-group\">\r\n                                    <input type=\"password\" class=\"form-control\"\r\n                                            minlength=\"10\" maxlength=\"20\" \r\n                                            [placeholder]=\"' * ' + ('global.confirm-password' | translate)\"\r\n                                            formControlName=\"confirmPassword\" [ngClass]=\"buildValidationClass ('confirmPassword')\" />\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.validations-messages.must-match-password-field' | translate }} \r\n                                    </small>\r\n\r\n                                    <!-- validation -->\r\n                                    <app-error-message [control]=\"form.get ('confirmPassword')\" [label]=\"'global.passwords' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row my-3\">\r\n                    <div class=\"col-12\">\r\n                        <fieldset class=\"pl-3 py-2\">\r\n                            <header>\r\n                                <h4> {{ 'global.personal.personal' | translate }} </h4>\r\n                            </header>\r\n\r\n                            <div class=\"row my-3\">\r\n\r\n                                <!-- name -->\r\n                                <div class=\"col-md-6 my-md-0 my-2\">\r\n                                    <input type=\"text\" id=\"nameInput\" class=\"form-control\" minlength=\"5\" maxlength=\"120\" \r\n                                           [placeholder]=\"' * ' + ('global.personal.name' | translate)\" #nameInput\r\n                                           formControlName=\"name\" [ngClass]=\"buildValidationClass ('name')\" />\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                        {{ nameInput.minLength }}\r\n                                        {{ 'global.other.to' | translate }} {{ nameInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('name')\" [label]=\"'global.personal.name' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- email -->\r\n                                <div class=\"col-md-6 my-md-0 my-2\">\r\n                                    <input type=\"email\" id=\"emailInput\" class=\"form-control\" minlength=\"5\" maxlength=\"30\" \r\n                                           [placeholder]=\"' * ' + ('global.personal.email' | translate)\" #emailInput\r\n                                           formControlName=\"email\" [ngClass]=\"buildValidationClass ('email')\"\r\n                                           (blur)=\"onEmailFocusOut (emailInput.value)\" />\r\n\r\n                                        <small class=\"text-muted\">\r\n                                            {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                            {{ emailInput.minLength }}\r\n                                            {{ 'global.other.to' | translate }} {{ emailInput.maxLength }}\r\n                                            {{ 'global.validations-messages.characters' | translate }}\r\n                                        </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('email')\" [label]=\"'global.personal.email' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row my-3\" formGroupName=\"phoneNumbers\">\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                            [placeholder]=\"' * ' + ('global.personal.phone-number' | translate)\"\r\n                                            formControlName=\"phoneNumber0\" [ngClass]=\"buildValidationClass ('phoneNumbers.phoneNumber0')\" \r\n                                            [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.this' | translate }} \r\n                                        {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                        {{ 'global.other.is-required' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber0')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                            [placeholder]=\"'global.personal.phone-number' | translate\"\r\n                                            formControlName=\"phoneNumber1\" \r\n                                            [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.this' | translate }} \r\n                                        {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                        {{ 'global.other.is-optional' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber1')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"tel\" class=\"form-control\" minlength=\"12\" maxlength=\"12\" \r\n                                            [placeholder]=\"'global.personal.phone-number' | translate\"\r\n                                            formControlName=\"phoneNumber2\" \r\n                                            [mask]=\"inputMasks.phoneNumber\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.this' | translate }} \r\n                                        {{ ('global.personal.phone-number' | translate).toLowerCase() }}\r\n                                        {{ 'global.other.is-optional' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('phoneNumbers.phoneNumber2')\" [label]=\"'global.personal.phone-number' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n\r\n                <!-- address data -->\r\n                <div class=\"row my-3\">\r\n                    <div class=\"col-12\">\r\n                        <fieldset class=\"pl-3 py-2\">\r\n                            <header>\r\n                                <h4> {{ 'global.address.address' | translate }} </h4>\r\n                            </header>\r\n\r\n                            <div class=\"row my-3\">\r\n\r\n                                <!-- country -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <select class=\"form-control\" formControlName=\"countryId\" [ngClass]=\"buildValidationClass ('countryId')\">\r\n                                        <option [value]=\"null\">\r\n                                            * {{ 'global.address.country' | translate }}\r\n                                        </option>\r\n                                        <option *ngFor=\"let country of countries$ | async;\" [value]=\"country.getId ()\">\r\n                                            {{ country.getAbbreviation ()}} - {{ country.getName () }} \r\n                                        </option>\r\n                                    </select>\r\n\r\n                                    <app-error-message [control]=\"form.get ('countryId')\" [label]=\"'global.address.country' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- state -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <select class=\"form-control\" formControlName=\"stateId\" [ngClass]=\"buildValidationClass ('stateId')\">\r\n                                        <option [value]=\"null\">\r\n                                            * {{ 'global.address.state' | translate }}\r\n                                        </option>\r\n                                        <option *ngFor=\"let state of states;\" [value]=\"state.getId ()\">\r\n                                            {{ state.getAbbreviation () }} - {{ state.getName () }} \r\n                                        </option>\r\n                                    </select>\r\n\r\n                                    <app-error-message [control]=\"form.get ('stateId')\" [label]=\"'global.address.state' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- city -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <select class=\"form-control\" formControlName=\"cityId\" [ngClass]=\"buildValidationClass ('cityId')\">\r\n                                        <option [value]=\"null\">\r\n                                            * {{ 'global.address.city' | translate }}\r\n                                        </option>\r\n                                        <option *ngFor=\"let city of cities;\" [value]=\"city.getId ()\">\r\n                                            {{ city.getName () }} \r\n                                        </option>\r\n                                    </select>\r\n\r\n                                    <app-error-message [control]=\"form.get ('cityId')\" [label]=\"'global.address.city' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row my-3\">\r\n\r\n                                <!-- zip code -->\r\n                                <div class=\"col-md-2 my-md-0 my-2\">\r\n                                    <input type=\"text\" class=\"form-control\" minlength=\"5\" maxlength=\"10\" \r\n                                    [placeholder]=\"' * ' + ('global.address.zip-code' | translate)\"\r\n                                    formControlName=\"zipCode\" [ngClass]=\"buildValidationClass ('zipCode')\"\r\n                                    [mask]=\"inputMasks.zipCode\" [dropSpecialCharacters]=\"false\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.zip-code-load' | translate }}\r\n                                    </small>\r\n\r\n                                    <!-- validation -->\r\n                                    <app-error-message [control]=\"form.get ('zipCode')\" [label]=\"'global.address.zip-code' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- street -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"text\" class=\"form-control\" minlength=\"5\" maxlength=\"120\" \r\n                                            [placeholder]=\"' * ' + ('global.address.street' | translate)\" #streetInput\r\n                                            formControlName=\"street\" [ngClass]=\"buildValidationClass ('street')\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                        {{ streetInput.minLength }}\r\n                                        {{ 'global.other.to' | translate }} {{ streetInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n\r\n                                    <!-- validation -->\r\n                                    <app-error-message [control]=\"form.get ('street')\" [label]=\"'global.address.street' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n\r\n                                <!-- complement -->\r\n                                <div class=\"col-md-4 my-md-0 my-2\">\r\n                                    <input type=\"text\" class=\"form-control\" maxlength=\"120\" #complementInput\r\n                                            [placeholder]=\"'global.address.complement' | translate\" formControlName=\"complement\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.optional' | translate }},\r\n                                        {{ 'global.other.but-allows-up-to' | translate }}\r\n                                        {{ complementInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n                                </div>\r\n\r\n                                <!-- number -->\r\n                                <div class=\"col-md-2 my-md-0 my-2\">\r\n                                    <input type=\"text\" class=\"form-control\" minlength=\"1\" maxlength=\"5\" \r\n                                            [placeholder]=\"' * ' + ('global.address.number' | translate)\" #numberInput\r\n                                            formControlName=\"number\" [ngClass]=\"buildValidationClass ('number')\"\r\n                                            [mask]=\"inputMasks.number\">\r\n\r\n                                    <small class=\"text-muted\">\r\n                                        {{ 'global.other.needed' | translate }} {{ 'global.other.from' | translate }} \r\n                                        {{ numberInput.minLength }}\r\n                                        {{ 'global.other.to' | translate }} {{ numberInput.maxLength }}\r\n                                        {{ 'global.validations-messages.characters' | translate }}\r\n                                    </small>\r\n\r\n                                    <app-error-message [control]=\"form.get ('number')\" [label]=\"'global.address.number' | translate\">\r\n                                    </app-error-message>\r\n                                </div>\r\n                            </div>\r\n                        </fieldset>\r\n                    </div>\r\n                </div>\r\n\r\n                <hr>\r\n\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <label class=\"required-label\"> \r\n                            (*) {{ 'global.required-fields' | translate }} \r\n                        </label>\r\n                    </div>\r\n                </div>\r\n\r\n                <button type=\"submit\" class=\"d-none\" #buttonSubmit> Submit </button>\r\n            </form>\r\n        </div>\r\n        <div class=\"card-footer\">\r\n            <button type=\"button\" class=\"btn btn-success float-right\" (click)=\"buttonSubmit.click ()\"> \r\n                {{ 'global.buttons.submit' | translate }} \r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\r\nimport { EmployeesFormComponent } from './employees-form/employees-form.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: EmployeesListComponent },\r\n  { \r\n    path: 'new', \r\n    component: EmployeesFormComponent,\r\n    /*resolve: {\r\n      employee: null\r\n    }*/\r\n   }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmployeesRoutingModule { }\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { ZipCodeService } from 'src/app/services/zip-code.service';\r\nimport { EmployeeService } from 'src/app/services/domain/employee.service';\r\nimport { CountryService } from 'src/app/services/domain/country.service';\r\nimport { StateService } from 'src/app/services/domain/state.service';\r\nimport { CityService } from 'src/app/services/domain/city.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { PersonService } from 'src/app/services/domain/person.service';\r\n\r\nimport { EmployeeNewDTO } from 'src/app/models/domain/new-dto/employee.new.dto';\r\n\r\nimport { PersonsFormComponent } from '../../persons/persons-form.component';\r\n\r\n@Component({\r\n  selector: 'app-employees-form',\r\n  templateUrl: './employees-form.component.html',\r\n  styles: ['.box-wrapper { width: 60rem; }']\r\n})\r\nexport class EmployeesFormComponent extends PersonsFormComponent<EmployeeNewDTO> implements OnInit, OnDestroy {\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    protected formBuilder: FormBuilder,\r\n    protected router: Router,\r\n    protected modalService: ModalService,\r\n    protected zipCodeService: ZipCodeService,\r\n    protected employeeService: EmployeeService,\r\n    protected countryService: CountryService,\r\n    protected stateService: StateService,\r\n    protected cityService: CityService,\r\n    protected personService: PersonService\r\n  ) {\r\n    super(translateService, storageService, formBuilder, router,\r\n          modalService, zipCodeService, countryService, stateService,\r\n          cityService, personService);\r\n\r\n    this.model = new EmployeeNewDTO();\r\n    this.showModal = true;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    super.ngOnInit ();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    super.ngOnDestroy ();\r\n  }\r\n\r\n  protected submit(): void {\r\n    if (this.socialSecurityNumberExists) {\r\n      this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.ssn-found');\r\n      return;\r\n    }\r\n\r\n    if (this.emailExists) {\r\n      this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.email-found');\r\n      return;\r\n    }\r\n\r\n    this.model = Object.assign (this.model, this.form.value) as EmployeeNewDTO;\r\n    const phoneNumbers: string[] = [];\r\n    phoneNumbers.push (this.form.get ('phoneNumbers.phoneNumber0').value);\r\n    const phoneNumber1 = this.form.get ('phoneNumbers.phoneNumber1');\r\n    const phoneNumber2 = this.form.get ('phoneNumbers.phoneNumber2');\r\n\r\n    if (phoneNumber1.value !== null && phoneNumber1.valid) {\r\n      phoneNumbers.push (phoneNumber1.value);\r\n    }\r\n\r\n    if (phoneNumber2.value !== null && phoneNumber2.valid) {\r\n      phoneNumbers.push (phoneNumber2.value);\r\n    }\r\n\r\n    this.model.setPhoneNumbers(phoneNumbers);\r\n\r\n    const waitModal = this.modalService.showWaitModal();\r\n    setTimeout(() => {\r\n      this.subscription$ = this.employeeService.insertEmployee (this.model).subscribe (\r\n        () => {\r\n          this.modalService.hideModal(waitModal);\r\n          this.modalService.showAlertSuccess ('modal.titles.success', 'modal.messages.post-success');\r\n          this.resetForm ();\r\n        },\r\n        () => {\r\n          this.modalService.hideModal(waitModal);\r\n          this.modalService.showAlertDanger ('modal.titles.error', 'modal.messages.post-error');\r\n        }\r\n      );\r\n    }, 500);\r\n  }\r\n\r\n  protected showValidationModal(currentForm: FormGroup): void {\r\n    super.showValidationModal (currentForm);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport { EmployeesRoutingModule } from './employees-routing.module';\r\nimport { BootstrapModule } from 'src/app/shared/bootstrap/bootstrap.module';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\nimport { EmployeesListComponent } from './employees-list/employees-list.component';\r\nimport { EmployeesFormComponent } from './employees-form/employees-form.component';\r\n\r\n@NgModule({\r\n  declarations: [EmployeesListComponent, EmployeesFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    EmployeesRoutingModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    BootstrapModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class EmployeesModule { }\r\n"]}