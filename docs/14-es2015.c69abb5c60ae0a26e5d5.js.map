{"version":3,"sources":["webpack:///src/app/views/profile/profile.component.html","webpack:///src/app/views/profile/profile-routing.module.ts","webpack:///src/app/views/profile/profile.component.ts","webpack:///src/app/views/profile/profile.module.ts"],"names":["ROUTES","path","component","ProfileComponent","translateService","storageService","personService","imageUtilService","modalService","super","localUser","person","this","subscription$","Subscription","Object","assign","getLocalUser","userType","getType","isLoading","hasError","loadData","unsubscribe","findPersonById","getId","pipe","map","resultPerson","imageUrl","environment","BUCKET_BASE_URL","buildFileName","name","img","document","createElement","src","addEventListener","DEFAULT_AVATAR_IMG","catchError","showAlertDanger","subscribe","event","srcElement","files","length","userImageFile","blob","URL","createObjectURL","userImage","userImageRef","first","nativeElement","waitModal","showWaitModal","setTimeout","updateUserImage","response","location","headers","get","currentTime","Date","getTime","revokeObjectURL","hideModal","showAlertSuccess","ProfileRoutingModule","forChild","ProfileModule"],"mappings":"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","file":"x","sourcesContent":["\r\n\r\n\r\n\r\n<!-- profiles -->\r\n<div class=\"box-wrapper mx-auto my-md-5 my-3\">\r\n    <div class=\"card\">\r\n        <div class=\"row no-gutters\" *ngIf=\"!isLoading && !hasError; else spanLoading\">\r\n            <div class=\"col-md-4\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <div class=\"hover-effect border-right\" (click)=\"userImageLabel.click();\">\r\n                            <input type=\"file\" id=\"userImageInput\" class=\"d-none\" accept=\"image/png, image/jpeg\" (change)=\"onChange ($event);\">\r\n                            <label for=\"userImageInput\" class=\"d-none\" #userImageLabel></label>\r\n\r\n                            <!-- overlay -->\r\n                            <img class=\"card-img top img-fluid\" [src]=\"person?.imageUrl\" alt=\"User Profile\" #userImage>\r\n                            <div class=\"overlay\">\r\n                                <p class=\"text-white h2 my-5\">\r\n                                    {{ 'profile.buttons.change-image' | translate }}\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <button type=\"button\" class=\"btn btn-success w-100\" (click)=\"onUploadImage ();\" [disabled]=\"!userImageFile\"> \r\n                            {{ 'profile.buttons.upload-image' | translate }} \r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-8\">\r\n                <div class=\"card-body\">\r\n                    <header>\r\n                        <h5> \r\n                            {{ !isLoading && !hasError ? person.name : 'global.menu-links.profile' | translate }}\r\n                        </h5>\r\n                    </header>\r\n\r\n                    <hr>\r\n\r\n                    <p class=\"card-text\"> {{ person.email }} </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"row\">\r\n            <ng-template #spanLoading>\r\n                <div class=\"bg-light p-3 text-center\">\r\n                    <span *ngIf=\"!hasError; else spanError;\"> \r\n                        {{ 'global.messages.loading' | translate }} ... \r\n                    </span>\r\n                </div>\r\n            </ng-template>\r\n        \r\n            <ng-template #spanError>\r\n                <span> {{ 'global.messages.system-error' | translate }} </span>\r\n                <button type=\"button\" class=\"btn btn-info mx-1\" (click)=\"loadData ()\"> \r\n                    {{ 'global.buttons.reload' | translate }} \r\n                </button>\r\n            </ng-template>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ProfileComponent } from './profile.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: ProfileComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProfileRoutingModule { }\r\n","import { Component, OnInit, OnDestroy, ViewChild, ElementRef, ViewChildren, QueryList } from '@angular/core';\r\nimport { Subscription, EMPTY } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\nimport { environment } from 'src/environments/environment';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ImageUtilService } from 'src/app/services/image-util.service';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { PersonService } from 'src/app/services/domain/person.service';\r\n\r\nimport { Person } from 'src/app/models/domain/person';\r\nimport { LocalUser } from 'src/app/models/local-user';\r\n\r\nimport { BaseTranslateComponent } from 'src/app/shared/base-translate/base-translate.component';\r\n\r\n@Component({\r\n  selector: 'app-profile',\r\n  templateUrl: './profile.component.html',\r\n  styleUrls: ['./profile.component.scss']\r\n})\r\nexport class ProfileComponent extends BaseTranslateComponent implements OnInit, OnDestroy {\r\n\r\n  // FIELDS\r\n\r\n  private subscription$: Subscription;\r\n  private localUser = new LocalUser();\r\n  public userType: string;\r\n  public person = {} as Person;\r\n  public userImageFile: File;\r\n  public isLoading: boolean;\r\n  public hasError: boolean;\r\n  public blob: string;\r\n\r\n  @ViewChildren('userImage')\r\n  public userImageRef: QueryList<ElementRef<HTMLImageElement>>;\r\n\r\n  private userImage: HTMLImageElement;\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    private personService: PersonService,\r\n    private imageUtilService: ImageUtilService,\r\n    private modalService: ModalService,\r\n  ) {\r\n\r\n    super(translateService, storageService);\r\n\r\n    this.subscription$ = new Subscription();\r\n    Object.assign(this.localUser, storageService.getLocalUser());\r\n    this.userType = this.localUser.getType();\r\n    this.isLoading = false;\r\n    this.hasError = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadData();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription$.unsubscribe ();\r\n  }\r\n\r\n  public loadData(): void {\r\n    this.isLoading = true;\r\n    this.hasError = false;\r\n\r\n    this.subscription$ = this.personService.findPersonById (this.localUser.getId ()).pipe (\r\n      map (resultPerson => {\r\n        this.isLoading = false;\r\n        this.hasError = false;\r\n        Object.assign (this.person, resultPerson);\r\n\r\n        // bucket url\r\n        const imageUrl = `${environment.BUCKET_BASE_URL}/${this.imageUtilService.buildFileName(this.person.name)}.jpg`;\r\n        this.person.imageUrl = imageUrl;\r\n        const img = document.createElement('img');\r\n        img.src = imageUrl;\r\n        img.addEventListener('error', () => this.person.imageUrl = environment.DEFAULT_AVATAR_IMG);\r\n      }),\r\n    catchError(() => {\r\n      this.isLoading = false;\r\n      this.hasError = true;\r\n      this.modalService.showAlertDanger('modal.titles.error!', 'global.messages.system-error');\r\n      return EMPTY;\r\n    })).subscribe();\r\n  }\r\n\r\n  public onChange(event): void {\r\n    if (event.srcElement.files.length === 1) {\r\n      this.userImageFile = event.srcElement.files[0] as File;\r\n      this.blob = URL.createObjectURL(this.userImageFile);\r\n      this.userImage = (this.userImageRef.first as ElementRef<HTMLImageElement>).nativeElement;\r\n      this.userImage.src = this.blob;\r\n    }\r\n  }\r\n\r\n  public onUploadImage(): void {\r\n    if (this.userImageFile) {\r\n      const waitModal = this.modalService.showWaitModal();\r\n\r\n      setTimeout(() => {\r\n        this.subscription$ = this.personService.updateUserImage(this.userImageFile).subscribe(\r\n          (response) => {\r\n            const location = response.headers.get('Location');\r\n\r\n            setTimeout(() => {\r\n              const currentTime = new Date().getTime();\r\n              this.person.imageUrl = `${location}?${currentTime}`;\r\n              URL.revokeObjectURL(this.blob);\r\n              this.userImageFile = null;\r\n\r\n              this.modalService.hideModal(waitModal);\r\n              this.modalService.showAlertSuccess('modal.titles.success', 'modal.messages.operation-succeed');\r\n\r\n            }, 100);\r\n          },\r\n          () => {\r\n            this.modalService.hideModal(waitModal);\r\n            this.modalService.showAlertDanger('modal.titles.error!', 'global.messages.system-error');\r\n          }\r\n        );\r\n      }, 500);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProfileRoutingModule } from './profile-routing.module';\r\nimport { ProfileComponent } from './profile.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\nimport { BootstrapModule } from 'src/app/shared/bootstrap/bootstrap.module';\r\n\r\n@NgModule({\r\n  declarations: [ProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ProfileRoutingModule,\r\n    SharedModule,\r\n    BootstrapModule,\r\n  ]\r\n})\r\nexport class ProfileModule { }\r\n"]}