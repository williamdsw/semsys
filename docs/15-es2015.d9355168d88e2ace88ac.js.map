{"version":3,"sources":["webpack:///src/app/views/reports/reports-list/reports-list.component.html","webpack:///src/app/views/reports/reports-routing.module.ts","webpack:///src/app/views/reports/reports-list/reports-list.component.ts","webpack:///src/app/views/reports/reports.module.ts"],"names":["ROUTES","path","component","ReportsListComponent","translateService","storageService","modalService","reportService","authenticationService","super","this","globalHeader","tableHeaders","Object","assign","_localUser","getLocalUser","records$","loadData","hasError","getType","pipeFindAll","findAllByEmployee","getId","findAllByStudent","observable","pipe","map","reports","report","dto","schedule","employee","student","getSchedule","getEmployee","getStudent","setEmployee","setStudent","setSchedule","catchError","error$","next","handleError","modalTexts","error","title","loading","body","employeeName","getName","studentName","showReportDetails","getTitle","getContent","getEmission","profile","containsProfile","ReportsRoutingModule","forChild","ReportsModule"],"mappings":"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","file":"x","sourcesContent":["\r\n<!-- reports -->\r\n<article class=\"table-box w-100 shadow-lg mx-auto my-md-5 my-3\">\r\n    <header>\r\n        <h1 class=\"mb-3 text-center\"> {{ globalHeader | translate }} </h1>\r\n    </header>\r\n\r\n    <hr>\r\n\r\n    <div class=\"row\" *ngIf=\"records$ | async as reports; else spanLoading\">\r\n        <div class=\"col-12\">\r\n            <div class=\"table-responsive\" *ngIf=\"!hasError && reports.length !== 0; else nothingFound;\">\r\n                <table class=\"table table-striped table-bordered\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th scope=\"col\" *ngFor=\"let header of tableHeaders;\">\r\n                                {{ header | translate }}\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr *ngFor=\"let report of reports;let currentIndex = index\">\r\n                            <td scope=\"row\"> {{ currentIndex + 1 }} </td>\r\n                            <td scope=\"row\"> {{ report.getEmission () | date }} </td>\r\n                            <td scope=\"row\"> {{ report.getSchedule ().getEmployee ().getName () }}</td>\r\n                            <td scope=\"row\"> {{ report.getSchedule ().getStudent ().getName () }}</td>\r\n                            <td scope=\"row\"> \r\n                                <button type=\"button\" class=\"btn btn-outline-primary\" (click)=\"showDetailModal (report);\"> \r\n                                    {{ 'report.details' | translate }} ... \r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <ng-template #spanLoading>\r\n        <div class=\"bg-light p-3 text-center\">\r\n            <span *ngIf=\"!hasError; else spanError;\"> \r\n                {{ 'global.messages.loading' | translate }}\r\n                {{ 'global.menu-links.my-reports' | translate }} ... \r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n\r\n    <ng-template #spanError>\r\n        <span> {{ 'global.messages.system-error' | translate }} </span>\r\n        <button type=\"button\" class=\"btn btn-info mx-1\" (click)=\"onReload ()\">\r\n            {{ 'global.buttons.reload' | translate }}\r\n        </button>\r\n    </ng-template>\r\n\r\n    <ng-template #nothingFound>\r\n        <div class=\"bg-light p-3 text-center\">\r\n            <span> \r\n                {{ (containsProfile ('EMPLOYEE') ? 'report.employee-reports-not-found' : 'report.student-reports-not-found') | translate }} \r\n            </span>\r\n        </div>\r\n    </ng-template>\r\n</article>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ReportsListComponent } from './reports-list/reports-list.component';\r\nimport { ReportsFormComponent } from './reports-form/reports-form.component';\r\n\r\nconst ROUTES: Routes = [\r\n  { path: '', component: ReportsListComponent },\r\n  { path: 'new', component: ReportsFormComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ReportsRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable, EMPTY } from 'rxjs';\r\nimport { map, catchError } from 'rxjs/operators';\r\n\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { ModalService } from 'src/app/services/modal.service';\r\nimport { StorageService } from 'src/app/services/storage.service';\r\nimport { ReportService } from 'src/app/services/domain/report.service';\r\nimport { AuthenticationService } from 'src/app/services/authentication.service';\r\n\r\nimport { ReportDTO } from 'src/app/models/domain/dto/report.dto';\r\nimport { EmployeeDTO } from 'src/app/models/domain/dto/employee.dto';\r\nimport { StudentDTO } from 'src/app/models/domain/dto/student.dto';\r\nimport { MeetingScheduleDTO } from 'src/app/models/domain/dto/meeting-schedule.dto';\r\nimport { ReportDetails } from 'src/app/models/report-detail';\r\n\r\nimport { BaseTableComponent } from 'src/app/shared/list-table/base-table/base-table.component';\r\n\r\n@Component({\r\n  selector: 'app-reports-list',\r\n  templateUrl: './reports-list.component.html',\r\n})\r\nexport class ReportsListComponent extends BaseTableComponent<ReportDTO> implements OnInit {\r\n\r\n  constructor(\r\n    protected translateService: TranslateService,\r\n    protected storageService: StorageService,\r\n    protected modalService: ModalService,\r\n    private reportService: ReportService,\r\n    private authenticationService: AuthenticationService,\r\n  ) {\r\n    super(translateService, storageService, modalService);\r\n\r\n    // default values\r\n    this.globalHeader = 'global.menu-links.my-reports';\r\n    this.tableHeaders = [\r\n      '#', 'report.emission', 'report.written-by', 'report.about', 'report.information'\r\n    ];\r\n\r\n    Object.assign (this._localUser, storageService.getLocalUser ());\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.records$ = this.loadData ();\r\n  }\r\n\r\n  public onUpdate(): void {}\r\n  public onDelete(): void {}\r\n  public onReload(): void {\r\n    this.hasError = false;\r\n    this.records$ = this.loadData();\r\n  }\r\n\r\n  protected loadData(): Observable<any> {\r\n\r\n    if (this._localUser.getType () === 'Employee') {\r\n      return this.pipeFindAll (this.reportService.findAllByEmployee (this._localUser.getId ()));\r\n    }\r\n    else if (this._localUser.getType() === 'Student') {\r\n      return this.pipeFindAll (this.reportService.findAllByStudent (this._localUser.getId ()));\r\n    }\r\n  }\r\n\r\n  protected pipeFindAll(observable: Observable<any>): Observable<any> {\r\n    return observable.pipe (\r\n      map (reports => {\r\n        return reports.map(report => {\r\n          this.hasError = false;\r\n\r\n          let dto = new ReportDTO ();\r\n          let schedule = new MeetingScheduleDTO ();\r\n          let employee = new EmployeeDTO ();\r\n          let student = new StudentDTO ();\r\n\r\n          dto = Object.assign (dto, report);\r\n          schedule = Object.assign (schedule, dto.getSchedule ());\r\n          employee = Object.assign (employee, schedule.getEmployee ());\r\n          student = Object.assign (student, schedule.getStudent ());\r\n\r\n          schedule.setEmployee (employee);\r\n          schedule.setStudent (student);\r\n          dto.setSchedule (schedule);\r\n\r\n          return dto;\r\n        });\r\n      }),\r\n\r\n      catchError(() => {\r\n        this.hasError = true;\r\n        this.error$.next (true);\r\n        this.handleError (this.modalTexts.error.title, this.modalTexts.loading.body);\r\n        return EMPTY;\r\n      })\r\n    );\r\n  }\r\n\r\n  public showDetailModal(report: ReportDTO): void {\r\n    const employeeName = report.getSchedule ().getEmployee ().getName ();\r\n    const studentName = report.getSchedule().getStudent().getName();\r\n    this.modalService.showReportDetails (employeeName, studentName, report.getTitle (), report.getContent (), report.getEmission ());\r\n  }\r\n\r\n  public containsProfile(profile: string) {\r\n    return this.authenticationService.containsProfile (profile);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { ReportsRoutingModule } from './reports-routing.module';\r\n\r\nimport { BootstrapModule } from 'src/app/shared/bootstrap/bootstrap.module';\r\n\r\nimport { ReportsListComponent } from './reports-list/reports-list.component';\r\nimport { ReportsFormComponent } from './reports-form/reports-form.component';\r\nimport { SharedModule } from 'src/app/shared/shared.module';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ReportsListComponent, ReportsFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    ReportsRoutingModule,\r\n    BootstrapModule,\r\n    SharedModule,\r\n  ]\r\n})\r\nexport class ReportsModule { }\r\n"]}